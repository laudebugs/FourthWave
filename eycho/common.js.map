{"version":3,"sources":["./src/app/podcast/services/podcast.service.ts"],"names":[],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAA4C;;;AAG5C,MAAM,kBAAkB,GAAG,kDAAG;;;;;;;;;;;;;;;;;;;CAmB7B;AAED,MAAM,oBAAoB,GAAG,kDAAG;;;;;;;;;;;;;;;;;;;CAmB/B;AAED,MAAM,sBAAsB,GAAG,kDAAG;;;;;;;;;;;;;;;;CAgBjC;AAIM,MAAM,cAAc;IACzB,YAAqB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAEvC,WAAW,CAAE,IAAY;QACvB,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;YAC5B,KAAK,EAAE,kBAAkB;YACzB,SAAS,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE;SAC1B,CAAC;IACJ,CAAC;IAED,UAAU,CAAE,IAAY;QACtB,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;YAC5B,KAAK,EAAE,oBAAoB;YAC3B,SAAS,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE;SAC1B,CAAC;IACJ,CAAC;IAED,WAAW,CAAE,IAAY,EAAE,IAAY;QACrC,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,CAAY;YACvC,KAAK,EAAE,sBAAsB;YAC7B,SAAS,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;SACtC,CAAC;IACJ,CAAC;;4EAtBU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core'\nimport { Apollo, gql } from 'apollo-angular'\nimport { Episode } from '../../shared/Models/Episode'\n\nconst GET_PODCASTS_QUERY = gql`\n  query GetPodcasts($page: Float!) {\n    getPodcasts(page: $page) {\n      title\n      publisher\n      rssFeed\n      link\n      image\n      description\n      lastRssBuildDate\n      slug\n      categories\n      palette\n      topics {\n        type\n        name\n      }\n    }\n  }\n`\n\nconst SINGLE_PODCAST_QUERY = gql`\n  query GetPodcast($slug: String!) {\n    getPodcast(slug: $slug) {\n      title\n      publisher\n      rssFeed\n      link\n      image\n      description\n      lastRssBuildDate\n      slug\n      categories\n      palette\n      topics {\n        type\n        name\n      }\n    }\n  }\n`\n\nconst PODCAST_EPISODES_QUERY = gql`\n  query GetPodcastEpisodes($slug: String!, $page: Float!) {\n    getPodcastEpisodes(slug: $slug, page: $page) {\n      title\n      datePublished\n      description\n      duration\n      sourceUrl\n      image\n      slug\n      topics {\n        type\n        name\n      }\n    }\n  }\n`\n@Injectable({\n  providedIn: 'root'\n})\nexport class PodcastService {\n  constructor (private apollo: Apollo) {}\n\n  getPodcasts (page: number) {\n    return this.apollo.watchQuery({\n      query: GET_PODCASTS_QUERY,\n      variables: { page: page }\n    })\n  }\n\n  getPodcast (slug: string) {\n    return this.apollo.watchQuery({\n      query: SINGLE_PODCAST_QUERY,\n      variables: { slug: slug }\n    })\n  }\n\n  getEpisodes (slug: string, page: number) {\n    return this.apollo.watchQuery<Episode[]>({\n      query: PODCAST_EPISODES_QUERY,\n      variables: { slug: slug, page: page }\n    })\n  }\n}\n"],"sourceRoot":"webpack:///"}