{"version":3,"sources":["./src/app/search/services/search.service.ts","./src/app/search/search.module.ts","./src/app/search/store/search.effects.ts","./src/app/search/store/search.state.ts","./src/app/search/store/search.actions.ts","./src/app/search/store/search.selectors.ts","./src/app/search/search.component.ts","./src/app/search/search.component.html","./src/app/search/store/search.reducers.ts"],"names":[],"mappings":"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","file":"search-search-module.js","sourcesContent":["import { Injectable } from '@angular/core'\nimport { Apollo, gql } from 'apollo-angular'\nimport { Observable } from 'rxjs'\nimport { Podcast } from 'src/app/shared/Models/Podcast'\n\nconst SEARCH_QUERY = gql`\n  query FindPodcasts($searchString: String!) {\n    findPodcasts(searchString: $searchString) {\n      title\n      publisher\n      rssFeed\n      link\n      image\n      description\n      lastRssBuildDate\n      slug\n      categories\n    }\n  }\n`\n\nconst SEARH_EPISODES_QUERY = gql`\n  query SearchEpisodes($searchString: String!) {\n    findEpisodes(searchString: $searchString) {\n      title\n      datePublished\n      description\n      duration\n      sourceUrl\n      image\n      podcast\n      epNo\n      snNo\n      slug\n    }\n  }\n`\n\nconst SEARCH_PODCASTS_AND_EPISODES = gql`\n  query($searchString: String!) {\n    findEpisodes(searchString: $searchString) {\n      title\n      datePublished\n      description\n      duration\n      sourceUrl\n      image\n      podcast\n      epNo\n      snNo\n      slug\n    }\n    findPodcasts(searchString: $searchString) {\n      title\n      publisher\n      rssFeed\n      base64image\n      link\n      image\n      description\n      palette\n      lastRssBuildDate\n      slug\n      categories\n    }\n  }\n`\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService {\n  constructor (private apollo: Apollo) {}\n\n  searchPodcast (searchString: string) {\n    return this.apollo.watchQuery<Podcast[]>({\n      query: SEARCH_QUERY,\n      variables: { searchString: searchString }\n    }).valueChanges\n  }\n\n  searchEpisodes (searchString: string) {\n    return this.apollo.watchQuery({\n      query: SEARH_EPISODES_QUERY,\n      variables: { searchString: searchString }\n    }).valueChanges\n  }\n\n  searchPodcastsAndEpisodes (searchString: string) {\n    return this.apollo.watchQuery({\n      query: SEARCH_PODCASTS_AND_EPISODES,\n      variables: { searchString: searchString }\n    }).valueChanges\n  }\n}\n","import { StoreModule } from '@ngrx/store'\nimport { EffectsModule } from '@ngrx/effects'\nimport { SearchComponent } from './search.component'\nimport { Material } from 'src/libs'\nimport { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { ReactiveFormsModule } from '@angular/forms'\nimport { RouterModule } from '@angular/router'\nimport { SearchEffects } from './store/search.effects'\nimport { SEARCH_STATE_NAME } from './store/search.state'\nimport { searchReducer } from './store/search.reducers'\n\nconst routes = [\n  {\n    path: '',\n    component: SearchComponent\n  }\n]\n\n@NgModule({\n  declarations: [SearchComponent],\n  imports: [\n    CommonModule,\n    Material,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes),\n    EffectsModule.forFeature([SearchEffects]),\n    StoreModule.forFeature(SEARCH_STATE_NAME, searchReducer)\n  ]\n})\nexport class SearchModule {}\n","import { Injectable } from '@angular/core'\nimport { Actions, concatLatestFrom, createEffect, ofType } from '@ngrx/effects'\nimport { Store } from '@ngrx/store'\nimport { forkJoin, Observable } from 'rxjs'\nimport {\n  catchError,\n  map,\n  mergeMap,\n  pluck,\n  switchMap,\n  tap,\n  withLatestFrom\n} from 'rxjs/operators'\nimport { AppState } from 'src/app/store/app.state'\nimport { SearchService } from '../services/search.service'\nimport * as SearchActions from './search.actions'\nimport { SearchState } from './search.state'\n\nimport * as SearchSelectors from './search.selectors'\n@Injectable()\nexport class SearchEffects {\n  constructor (\n    private actions$: Actions,\n    private searchService: SearchService,\n    private store: Store<AppState>\n  ) {}\n\n  search$ = createEffect(() => {\n    const request$ = this.actions$.pipe(\n      ofType(SearchActions.searchStart),\n      concatLatestFrom(action => this.store.select(SearchSelectors.getSearch)),\n      mergeMap(([action, searchState]) => {\n        let query$\n        if (searchState.searchEpisodes && searchState.searchPodcasts) {\n          query$ = this.searchService\n            .searchPodcastsAndEpisodes(searchState.searchTerm)\n            .pipe(\n              catchError((error: Error): any => {\n                console.log(error.message)\n                return error\n              })\n            )\n        } else if (searchState.searchEpisodes) {\n          query$ = this.searchService\n            .searchEpisodes(searchState.searchTerm)\n            .pipe(\n              catchError((error: Error): any => {\n                console.log(error.message)\n                return error\n              })\n            )\n        } else if (searchState.searchPodcasts) {\n          query$ = this.searchService\n            .searchPodcast(searchState.searchTerm)\n            .pipe(\n              catchError((error: Error): any => {\n                console.log(error.message)\n                return error\n              })\n            )\n        }\n        return query$\n      })\n    )\n    const result$ = request$.pipe(\n      pluck('data'),\n      map((result: any) => {\n        return SearchActions.searchSuccess({\n          podcasts: result?.findPodcasts || [],\n          episodes: result?.findEpisodes || []\n        })\n      }),\n      catchError((error: Error) => {\n        console.log(error.message)\n        return [SearchActions.searchFailure()]\n      })\n    )\n\n    return result$\n  })\n}\n","import { Episode } from 'src/app/shared/Models/Episode'\nimport { Podcast } from 'src/app/shared/Models/Podcast'\n\nexport const SEARCH_STATE_NAME = 'search'\n\nexport interface SearchState {\n  loading: boolean\n  loaded: boolean\n  searchTerm: string\n  podcastResults: Podcast[]\n  episodeResults: Episode[]\n  searchPodcasts: boolean\n  searchEpisodes: boolean\n  podcastSearchPage: number\n  episodeSearchPage: number\n}\n\nexport const initiaialSearchState: SearchState = {\n  loading: false,\n  loaded: false,\n  searchTerm: '',\n  podcastResults: [],\n  episodeResults: [],\n  searchEpisodes: false,\n  searchPodcasts: true,\n  podcastSearchPage: 0,\n  episodeSearchPage: 0\n}\n","import { createAction, props } from '@ngrx/store'\nimport { Episode } from 'src/app/shared/Models/Episode'\nimport { Podcast } from 'src/app/shared/Models/Podcast'\n\nexport const SEARCH_START = 'search start'\nexport const SEARCH_SUCCESS = 'search success'\nexport const SEARCH_FAILURE = 'search failure'\nexport const SET_SEARCH_PODCASTS = 'search podcasts'\nexport const SET_SEARCH_EPISODES = 'search episodes'\nexport const SET_PODCAST_SEARCH_PAGE = 'set podcast search page'\nexport const SET_EPISODE_SEARCH_PAGE = 'set episode search page'\nexport const SET_SEARCH_TERM = 'set search term'\n\nexport const searchStart = createAction(SEARCH_START)\nexport const searchSuccess = createAction(\n  SEARCH_SUCCESS,\n  props<{ episodes?: Episode[]; podcasts?: Podcast[] }>()\n)\n\nexport const searchFailure = createAction(SEARCH_FAILURE)\n\nexport const setSearchPodcasts = createAction(\n  SET_SEARCH_PODCASTS,\n  props<{ search: boolean }>()\n)\nexport const setSearchEpisodes = createAction(\n  SET_SEARCH_EPISODES,\n  props<{ search: boolean }>()\n)\nexport const setSearchTerm = createAction(\n  SET_SEARCH_TERM,\n  props<{ searchTerm: string }>()\n)\n\nexport const setEpisodeSearchPage = createAction(\n  SET_EPISODE_SEARCH_PAGE,\n  props<{ page: number }>()\n)\nexport const setPodcastSearchPage = createAction(\n  SET_PODCAST_SEARCH_PAGE,\n  props<{ page: number }>()\n)\n","import { createFeatureSelector, createSelector } from '@ngrx/store'\nimport { Episode } from 'src/app/shared/Models/Episode'\nimport { Podcast } from 'src/app/shared/Models/Podcast'\nimport { SearchState, SEARCH_STATE_NAME } from './search.state'\n\nconst getSearchState = createFeatureSelector<SearchState>(SEARCH_STATE_NAME)\nexport const getSearch = createSelector(\n  getSearchState,\n  (state: SearchState): SearchState => {\n    return state\n  }\n)\n\nexport const getSearchTerm = createSelector(getSearch, (state: SearchState) => {\n  return state.searchTerm\n})\nexport const getSearchLoading = createSelector(\n  getSearch,\n  (state: SearchState): boolean => {\n    return state.loading\n  }\n)\n\nexport const getSearchLoaded = createSelector(\n  getSearch,\n  (state: SearchState): boolean => {\n    return state.loaded\n  }\n)\n\nexport const getPodcastResults = createSelector(\n  getSearch,\n  (state: SearchState): Podcast[] => {\n    return state?.podcastResults\n  }\n)\n\nexport const getEpisodeResults = createSelector(\n  getSearch,\n  (state: SearchState): Episode[] => {\n    return state?.episodeResults\n  }\n)\n\nexport const getSearchEpisodes = createSelector(\n  getSearch,\n  (state: SearchState): boolean => {\n    return state.searchEpisodes\n  }\n)\n\nexport const getSearchPodcasts = createSelector(\n  getSearch,\n  (state: SearchState): boolean => {\n    return state.searchPodcasts\n  }\n)\n\nexport const getPodcastSearchPage = createSelector(\n  getSearch,\n  (state: SearchState): number => {\n    return state.podcastSearchPage\n  }\n)\n\nexport const getEpisodeSearchPage = createSelector(\n  getSearch,\n  (state: SearchState): number => {\n    return state.episodeSearchPage\n  }\n)\n","import { Component, OnInit } from '@angular/core'\nimport { FormGroup, FormControl, FormBuilder } from '@angular/forms'\nimport { fromEvent, Observable } from 'rxjs'\nimport {\n  debounceTime,\n  distinctUntilChanged,\n  pluck,\n  switchMap\n} from 'rxjs/operators'\nimport { SearchService } from './services/search.service'\nimport { Podcast } from 'src/app/shared/Models/Podcast'\nimport { Episode } from 'src/app/shared/Models/Episode'\nimport { Store } from '@ngrx/store'\nimport { AppState } from '../store/app.state'\nimport * as SearchActions from './store/search.actions'\nimport * as SearchSelectors from './store/search.selectors'\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent implements OnInit {\n  options: FormGroup\n  hideRequiredControl = new FormControl(false)\n  floatLabelControl = new FormControl('auto')\n\n  podcasts$: Observable<Podcast[]>\n  episodes$: Observable<Episode[]>\n  searchTerm$: Observable<string>\n  checkPodcasts$: Observable<boolean>\n  checkEpisodes$: Observable<boolean>\n\n  constructor (\n    private fb: FormBuilder,\n    private searchService: SearchService,\n    private store: Store<AppState>\n  ) {\n    this.options = this.fb.group({\n      hideRequired: this.hideRequiredControl,\n      floatLabel: this.floatLabelControl\n    })\n  }\n\n  ngOnInit (): void {\n    const inputElement = document.getElementById('search') || document\n    const input$ = fromEvent(inputElement, 'keyup')\n\n    const search$ = input$.pipe(\n      pluck('target', 'value'),\n      debounceTime(200),\n      distinctUntilChanged(),\n      switchMap((value: string) => {\n        // console.log(value)\n        this.store.dispatch(SearchActions.setSearchTerm({ searchTerm: value }))\n\n        return this.store.select(SearchSelectors.getSearchTerm)\n      })\n    )\n    this.podcasts$ = this.store.select(SearchSelectors.getPodcastResults)\n    this.episodes$ = this.store.select(SearchSelectors.getEpisodeResults)\n    this.searchTerm$ = this.store.select(SearchSelectors.getSearchTerm)\n    this.checkEpisodes$ = this.store.select(SearchSelectors.getSearchEpisodes)\n    this.checkPodcasts$ = this.store.select(SearchSelectors.getSearchPodcasts)\n    search$.subscribe(results => {\n      //@ts-ignore\n      this.store.dispatch(SearchActions.searchStart())\n    })\n  }\n\n  checkPodcasts (value: boolean) {\n    this.store.dispatch(SearchActions.setSearchPodcasts({ search: value }))\n  }\n\n  checkEpisodes (value: boolean) {\n    this.store.dispatch(SearchActions.setSearchEpisodes({ search: value }))\n  }\n}\n","<div class=\"search__bar\">\n  <mat-form-field appearance=\"fill\" [floatLabel]=\"floatLabelControl.value\">\n    <mat-label>Search</mat-label>\n    <input id=\"search\" matInput placeholder=\"eg. Stuff of Life\" />\n  </mat-form-field>\n  <section class=\"checked\">\n    <mat-checkbox\n      [checked]=\"checkPodcasts$|async\"\n      (change)=\"checkPodcasts($event.checked)\"\n      >Podcasts</mat-checkbox\n    >\n    <mat-checkbox\n      [checked]=\"checkEpisodes$ |async\"\n      (change)=\"checkEpisodes($event.checked)\"\n      >Episodes</mat-checkbox\n    >\n  </section>\n</div>\n<div class=\"results\">\n  <div class=\"pods\">\n    <h2>Podcasts</h2>\n    <div class=\"pod__list\">\n      <div *ngFor=\"let pod of (podcasts$ | async)\" class=\"podcast\">\n        <a\n          [routerLink]=\"['/podcast', pod.slug]\"\n          routerLinkActive=\"active\"\n          [state]=\"pod\"\n        >\n          <img src=\"{{pod.image}}\" alt=\"\" />\n          <h2>{{pod.title}}</h2>\n        </a>\n      </div>\n    </div>\n  </div>\n  <div class=\"episodes\">\n    <h2>Episodes</h2>\n    <div class=\"eps__list\">\n      <div *ngFor=\"let episode of (episodes$ | async )\" class=\"episode\">\n        <img src=\"{{episode.image}}\" alt=\"{{episode.title}}\" />\n        <h3>\n          {{episode.title}}\n        </h3>\n      </div>\n    </div>\n  </div>\n</div>\n","import { initiaialSearchState, SearchState } from './search.state'\nimport { createReducer, on } from '@ngrx/store'\nimport * as SearchActions from './search.actions'\nconst _searchReducer = createReducer(\n  initiaialSearchState,\n  on(SearchActions.searchStart, (state: SearchState) => {\n    return {\n      ...state,\n      loading: true\n    }\n  }),\n  on(SearchActions.searchSuccess, (state: SearchState, action) => {\n    return {\n      ...state,\n      loading: false,\n      loaded: true,\n      podcastResults: [\n        ...(state.searchPodcasts ? action.podcasts : state.podcastResults)\n      ],\n      episodeResults: [\n        ...(state.searchEpisodes ? action.episodes : state.episodeResults)\n      ]\n    }\n  }),\n  on(SearchActions.searchFailure, (state: SearchState, action) => {\n    return {\n      ...state,\n      loading: false,\n      loaded: false\n    }\n  }),\n  on(SearchActions.setSearchTerm, (state: SearchState, action) => {\n    return {\n      ...state,\n      searchTerm: action.searchTerm\n    }\n  }),\n  on(SearchActions.setEpisodeSearchPage, (state: SearchState, action) => {\n    return {\n      ...state,\n      episodeSearchPage: action.page\n    }\n  }),\n  on(SearchActions.setPodcastSearchPage, (state: SearchState, action) => {\n    return {\n      ...state,\n      podcastSearchPage: action.page\n    }\n  }),\n  on(SearchActions.setSearchEpisodes, (state: SearchState, action) => {\n    return {\n      ...state,\n      searchEpisodes: action.search\n    }\n  }),\n  on(SearchActions.setSearchPodcasts, (state: SearchState, action) => {\n    return {\n      ...state,\n      searchPodcasts: action.search\n    }\n  })\n)\n\nexport const searchReducer = (state, action) => {\n  return _searchReducer(state, action)\n}\n"],"sourceRoot":"webpack:///"}